# 배열 기초
  	// 배열
    //int subway_1 = 30; // 지하철 1호차에 30명이 타고 있다
    //int subway_2 = 40;
    //int subway_3 = 50;

    //printf("지하철 1호차에 %d 명이 타고 있습니다.\n", subway_1);
    //printf("지하철 1호차에 %d 명이 타고 있습니다.\n", subway_2);
    //printf("지하철 1호차에 %d 명이 타고 있습니다.\n", subway_3);

    // 여러 개의 변수를 함께, 동시에 생성
    int subway_array[3]; // [0][1][2]
    subway_array[0] = 30;
    subway_array[1] = 40;
    subway_array[2] = 50;

    for (int i = 0; i < 3; i++)
    {
      printf("지하철 %d호차에 %d 명이 타고 있습니다.\n", i+1, subway_array[i]);
    }

# 값 설정
  // 값 설정 방법
	int arr[10] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
	for (int i = 0; i < 10; i++)
	{
		printf("%d\n", arr[i]);
	}

	// 값은 초기화를 반드기 해야 함
	int arr[10];					# 결과가 이상하게 나옴
	for (int i = 0; i < 10; i++)
	{
		printf("%d\n", arr[i]);
	}

	// 배열 크기는 항상 상수로 선언
	//int size = 10;
	//int arr[size]; // 이렇게 사용 불가
	
	int arr[10] = { 1, 2 };		// 3번째 값부터는 자동으로 '0'으로 초기화 됨
	for (int i = 0; i < 10; i++)
	{
		printf("%d\n", arr[i]);
	}

	int arr[] = { 1, 2 }; // arr[2] 와 동일

	float arr_f[5] = { 1.0f, 2.0f, 3.0f };
	for (int i = 0; i < 5; i++)
		{
			printf("%.2f\n", arr_f[i]);     # 결과: 1.00 2.00 3.00 0.00 0.00
		}

# 문자 vs 문자열
  // 문자 vs 문자열
	char c = 'A';
	printf("%c\n", c); // 문자

	// 문자열 끝에는 '끝'을 의미하는 NULL 문자 '\0' 가 포함되어야 함
	char str[7] = "coding";     // [c][o][d][i][n][g][\0] 이래서 총 7칸으로 생성해야 됨
	printf("%s\n", str);

	char str[] = "coding";
	printf("%s\n", str);
	printf("%d\n", sizeof(str));  // 길이는 7로 나옴

	for (int i = 0; i < sizeof(str); i++)   // for 문으로 돌리면 마지막 한줄이 비게 나옴(\0 때문)
	{
		printf("%c\n", str[i]);
	}

	char kor[] = "나도코딩";
	printf("%s\n", kor);          // 잘 나옴
	printf("%d\n", sizeof(kor));  // 9
	// 영어 1글자: 1 byte
	// 한글 1글자: 2 byte
	// char 크기: 1 byte

# 문자열 심화
  char c_array[7] = { 'c','o','d','i','n','g','\0' };	// \0(null문자) 가 들어갈 자리를 필수로 남겨둠
  //char c_array[6] = { 'c','o','d','i','n','g'};	// 오류 발생
  printf("%s\n", c_array);

  char c_array[10] = { 'c','o','d','i','n','g','\0' };
  printf("%s\n", c_array);			// 잘나옴
  for (int i = 0; i < sizeof(c_array); i++)	// 잘 나오고 나머지는 빈줄로 나옴
  {
      printf("%c\n", c_array[i]);
  }
  for (int i = 0; i < sizeof(c_array); i++)	// 잘 나오고 나머지는 빈줄로 나옴
  {
      printf("%d\n", c_array[i]); 		// ASCII 코드 값 출력 (null 문자는 0 으로 입력됨)
  }
	
  // 문자열 입력받기 : 경찰서 조서 쓰기 예제		// 배열 예제(printf_scanf)
  char name[256];				// 256 칸으로 넉넉함
  printf("이름이 뭐에요?");
  scanf_s("%s", name, sizeof(name));
  printf("%s\n", name);

# 아스키 코드
  // 참고1 : ASCII 코드? ANSI(미국표준협회)에서 제시한 표준 코드 체계
  // 7bit, 총 128 개 코드 (0 ~ 127)
  // 예제
  printf("%c\n", 'a');	// 결과 : a
  printf("%d\n", 'a');	// 결과 : 97

  printf("%c\n", 'b');	// 결과 : b
  printf("%d\n", 'b');	// 결과 : 98
  
  printf("%c\n", 'A');	// 결과 : A
  printf("%d\n", 'A');	// 결과 : 65
  
  printf("%c\n", '\0');	// 결과 : 
  printf("%d\n", '\0');	// 결과 : 0
  
  printf("%c\n", '0');	// 결과 : 0
  printf("%d\n", '0');	// 결과 : 48
  
  printf("%c\n", '1');	// 결과 : 1
  printf("%d\n", '1');	// 결과 : 49

  // 참고2 : 0 ~ 127 사이의 아스키코드 정수값에 해당하는 문자 확인
  for (int i = 0; i < 128; i++)
  {
  	printf("아스키코드 정수 %d : %c\n", i, i);
  }

# 프로젝트
#include <stdio.h>
#include <time.h>

int main(void)
{
	srand(time(NULL));
	printf("\n\n === 아빠는 대머리 게임 === \n\n");
	int answer;	// 사용자 입력값
	int treatment = rand() % 4; // 발모제(정답) 선택 (0 ~ 3)

	int cntShowBottle = 0;		// 이번 게임에 보여줄 병 갯수
	int prevCntShowBottle = 0;	// 앞 게임에 보여준 병 갯수
	// 서로 보여주는 병 갯수를 다르게 하여 정답률 향상(처음에 2개 -> 다음엔 3개...)

	// 3번의 발모제 투여 시도
	for (int i = 1; i <= 3; i++)
	{
		int bottle[4] = { 0,0,0,0 };	// 4개의 병
		do {
			cntShowBottle = rand() % 2 + 2;	// 보여줄 병 갯수 (0~2, +2 -> 2,3)
		} while (cntShowBottle == prevCntShowBottle);
		prevCntShowBottle = cntShowBottle;

		int isIncluded = 0; // 보여줄병 중에 발모제가 포함되었는지 여부(1 : 포함)
		printf(" > %d 번째 시도 : ", i);

		// 보여줄 병 종류를 선택
		for (int j = 0; j < cntShowBottle; j++)
		{
			int randBottle = rand() % 4; // 0~3

			// 아직 선택되지 않은 병이면, 선택처리
			if (bottle[randBottle] == 0)
			{
				bottle[randBottle] = 1;
				if (randBottle == treatment)
				{
					isIncluded = 1;
				}
			}
			// 이미 선택된 병이면, 중복이므로 다시 선택
			else
			{
				j--;
			}
		}

		// 사용자에게 문제 표시
		for (int k = 0; k < 4; k++)
		{
			if (bottle[k] == 1)
			{
				printf("%d ", k + 1);
			}
		}
		printf(" 물약을 머리에 바릅니다\n\n");
		if (isIncluded == 1)
		{
			printf(" >> 성공! 머리가 났어요!!\n");
		}
		else
		{
			printf(" >> 실패! 머리가 나지 않았어요..\n");
		}

		printf("\n ... 계속하려면 아무키나 누르세요...");
		getchar();	// 사용자가 어떤 키를 누를때까지 기다리는 역할로 사용
	}

	printf("\n\n 발모제는 몇 번일까요?");
	scanf_s("%d", &answer);
	if (answer == treatment + 1)
	{
		printf("\n >> 정답입니다!\n");
	}
	else
	{
		printf("\n >> 땡! 틀렸어요, 정답은 %d 입니다\n", treatment + 1);
	}

	return 0;
}
