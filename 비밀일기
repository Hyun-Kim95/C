# 파일 쓰기 fputs
  #define _CRT_SECURE_NO_WARNINGS   // 위험할 수 있다는 오류를 해결하기위해서 적음
  #include <stdio.h>

  #define MAX 10000
  int main(void)
  {
        // 파일 입출력
	// 파일에 어떤 데이터를 저장,
	// 파일에 저장된 데이터를 불러오기

	// fputs, fgets 쌍  ->  문자열 저장
	char line[MAX];                             	// char line[10000];
	FILE* file = fopen("D:\\test1.txt", "wb");	// '\\' 이렇게 써야 역슬래시 하나로 인식함
	if (file == NULL)
	{
	    printf("파일 열기 실패\n");
	    return 1;
	}

	fputs("fputs 를 이용해서 글을 적어볼게요\n", file);
	fputs("잘 적히는지 확인해주세요\n", file);

	// 파일을 열고 나서 닫지 않은 상태에서 어떤 프로그램에 문제가 생기면?
	// 데이터 손실 발생 가능! 그래서 항상 파일은 닫아주는 습관을 들여주세요
	fclose(file);
    
	return 0;
  }

# 파일 읽기 fgets
  FILE* file = fopen("D:\\test1.txt", "rb");
  if (file == NULL)
  {
	printf("파일 열기 실패\n");
	return 1;
  }

  while (fgets(line, MAX, file) != NULL)
  {
	printf("%s", line);
  }

  fclose(file);

# 또다른 파일 쓰기 fprintf
  int num[6] = { 0, 0, 0, 0, 0, 0 };	// 추첨번호
  int bonus = 0;			// 보너스 번호
  char str1[MAX];
  char str2[MAX];
  FILE* file = fopen("D:\\test2.txt", "wb");
  if (file == NULL)
  {
	printf("파일 열기 실패\n");
	return 1;
  }

  // 로또 추첨 번호 저장
  fprintf(file, "%s %d %d %d %d %d %d\n", "추첨번호", 1, 2, 3, 4, 5, 6);
  fprintf(file, "%s %d\n", "보너스 번호", 7);

  fclose(file);

# 또다른 파일 읽기 fscanf
  FILE* file = fopen("D:\\test2.txt", "rb");
  if (file == NULL)
  {
	printf("파일 열기 실패\n");
	return 1;
  }				      //↓↓배열은 & 안붙힘
  fscanf(file, "%s %d %d %d %d %d %d", str1,
	&num[0], &num[1], &num[2], &num[3], &num[4], &num[5]);
  printf("%s %d %d %d %d %d %d\n", str1,
	num[0], num[1], num[2], num[3], num[4], num[5]);

  fscanf(file, "%s %d", str2, &bonus);
  printf("%s %d\n", str2, bonus);

  fclose(file);

# 프로젝트
  #define _CRT_SECURE_NO_WARNINGS
  #include <stdio.h>

  // 비밀번호를 입력 받아서
  // 맞는 경우? 비밀 일기를 읽어와서 보여주고, 계속 작성하도록 합니다.
  // 틀린 경우? 경고 메시지를 표시하고 종료합니다.

  #define MAX 10000

  int main(void)
  {
      // fgets, fputs 활용
      char line[MAX];		// 파일에서 불러온 내용을 저장할 변수
      char contents[MAX];	// 일기장에 입력할 내용
      char password[20];	// 비밀번호 입력
      char c;			// 비밀번호 입력 할 때 키값 확인용(마스킹)

      printf("'비밀일기'에 오신 것을 환영합니다\n");
      printf("비밀번호를 입력하세요 : ");

      // getchar() / getch() 의 차이?
      // getchar()  : 엔터를 입력받아야 동작을 합니다.
      // getch()  : 키 입력 시 바로바로 동작을 합니다.

      int i = 0;
      while (1)
      {
	  c = getch();
	  if (c == 13)	// Enter -> 비밀번호 입력 종료
	  {
		password[i] = '\0';
		break;
	  }
	  else  // 비밀번호 입력 중
	  {
		printf("*");
		password[i] = c;
	  }
	  i++;
      }

      // 비밀번호 : 나도코딩 skehzheld
      printf("\n\n === 비밀번호 확인 중... ===\n\n");
      if (strcmp(password, "skehzheld") == 0)	// 비밀번호 일치
      {
	  printf(" === 비밀번호 확인 완료 === \n\n");
	  char* fileName = "D:\\secretdiary.txt";
	  FILE* file = fopen(fileName, "a+b");
	  // 파일이 없으면 생성, 파일이 있으면 append를 한다(뒤에서부터 내용을 추가한다)
	  if (file == NULL)
	  {
		printf("파일 열기 실패\n");
		return 1;
	  }

	  while (fgets(line, MAX, file) != NULL)
	  {
		printf("%s", line);
	  }

	  printf("\n\n 내용을 계속 작성하세요! 종료하시려면 EXIT를 입력하세요\n\n");

	  while (1)
	  {
		scanf("%[^\n]", contents);	// 새 줄(\n)이 나오기 전까지 읽어들임(한 문장씩)
		getchar();	// Enter 입력 (\n) Flush 처리

		if (strcmp(contents, "EXIT") == 0)
		{
			printf("비밀일기 입력을 종료합니다\n\n");
			break;
		}
		fputs(contents, file);
		fputs("\n", file); // Enter를 위에서 무시 처리 하였으므로 임의로 추가
	  }
	  fclose;
      }
      else  // 비밀번호 틀린 경우
      {
	  printf(" === 비밀번호가 틀렸어요 === \n\n");
      }
      return 0;
  }
